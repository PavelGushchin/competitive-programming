# Задача: E, Вердикт: OK, Время: 146ms, Память: 33.65Mb
import sys

def main():
    # читаем число в виде строки "n" и считаем его остаток от деления на 7:
    # для вычисления остатка применяем схему Горнера, например:
    # a * 1000 + b * 100 + c * 10 + d = ((a * 10 + b) * 10 + c) * 10 + d
    n = sys.stdin.readline().strip()
    numDigits = len(n)
    remainder = 0
    for ch in n:
        # вычитая ASCII код нуля, получаем саму цифру
        digit = ord(ch) - ord('0')
        remainder = (remainder * 10 + digit) % 7
    # теперь пытаемся увеличить и уменьшить каждую цифру, пересчитывая остаток
    # от деления на 7 по формулам. Если получился нулевой остаток, то увеличиваем ответ
    powerOf10 = 1
    answer = 0
    for i in range(numDigits - 1, -1, -1):
        # powerOf10 — остаток от деления на 7 для степени десятки,
        # соответствующей текущему разряду. Разряды нумеруются справа-налево
        # если увеличить текущую цифру, то остаток увеличится на powerOf10
        # аналогично для уменьшения текущей цифры
        # пытаемся увеличить текущую цифру. нельзя увеличивать девятки
        if n[i] != '9':
            newRemainder = (remainder + powerOf10) % 7
            if newRemainder == 0:
                answer += 1
        # пытаемся уменьшить текущую цифру. нельзя уменьшать нолики и лидирующую единицу
        if n[i] != '0' and not (n[i] == '1' and i == 0):
            newRemainder = (remainder - powerOf10) % 7
            if newRemainder == 0:
                answer += 1
        # обновляем степень десятки для следующего разряда:
        powerOf10 = (powerOf10 * 10) % 7
    # выводим ответ:
    print(answer)

if __name__ == "__main__":
    main()
