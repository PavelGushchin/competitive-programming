// Задача: D, Вердикт: OK, Время: 0.035 сек, Память: 2 MB

// Для решения задачи построим последовательность из 0 и 1 оптимальным способом.
// Порядок формирования блоков последовательности:
// 1. Чередуем 0 и 1 блоками [01] и для них делаем OR;
// 2. Ставим 1 подряд и для них делаем AND;
// 3. Ставим 1 подряд и для них делаем OR;
// 4. Ставим 0 подряд с операцией OR.
// Некоторые шаги выполнить невозможно - пропускаем их.
// Для корректного вычисления ответа храним:
// - last: последний поставленный элемент;
// - len: длину набранной последовательности.
// Ответы для блоков:
// 1. Этот блок прибавит к ответу столько, сколько OR мы поставили;
// 2. Прибавит количество AND. Если слева ещё не стояла 1, то минус 1;
// 3. Прибавит столько, сколько единиц мы поставили. Но если len == 0, то минус 1;
// 4. Даст либо 0, либо 1 - если слева уже была поставлена единица.
#include <bits/stdc++.h>
#define int int64_t
using namespace std;
int solve(int n0, int n1, int nOR) {
    // крайние случаи:
    if (n0 == 0)
        return n1-1;
    if (n1 == 0)
        return 0;
    // решаем задачу для общего случая
    int nAND = n0+n1-1-nOR;
    int answ = 0, last = 0, len = 0;
    // поставим первые [01] и для них один OR:
    if (n0 > 0 && n1 > 0 && nOR >= 1) {
        n0--, n1--, nOR--;
        answ++;
        len += 2;
        last = 1;
    }
    // ставим группы [01] подряд с двумя OR:
    if (int cnt = min<int>({n0, n1, nOR / 2}); cnt > 0) {
        n0 -= cnt;
        n1 -= cnt;
        nOR -= 2 * cnt;
        answ += 2 * cnt;
        len += 2 * cnt;
        last = 1;
    }
    // ставим единицы подряд с операцией AND:
    if (int cnt = min<int>(n1, nAND); cnt > 0) {
        n1 -= cnt;
        nAND -= cnt;
        answ += cnt;
        if (last == 0)
            answ--;
        last = 1;
        len += cnt;
    }
    // ставим единицы подряд с операцией OR:
    if (int cnt = min<int>(n1, nOR); cnt > 0) {
        n1 -= cnt;
        nOR -= cnt;
        answ += cnt;
        if (len == 0)
            answ--;
        last = 1;
        len += cnt;
    }
    // ставим нули подряд с операцией OR:
    if (int cnt = min<int>(n0, nOR); cnt > 0) {
        n0 -= cnt;
        nOR -= cnt;
        if (last == 1)
            answ++;
        last = 0;
        len += cnt;
    }
    return answ;
}
void solve() {
    int n0, n1, nOR;
    cin >> n0 >> n1 >> nOR;
    cout << solve(n0, n1, nOR) << endl;
}
main() {
    int tt; cin >> tt;
    while (tt --> 0)
        solve();
}
